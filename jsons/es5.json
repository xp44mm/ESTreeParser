[
    {
        "extend": false,
        "name": "Node",
        "interface": {
            "inherit": [],
            "body": [
                [
                    "type",
                    "string"
                ],
                [
                    "loc",
                    {
                        "union": [
                            "SourceLocation",
                            "null"
                        ]
                    }
                ]
            ]
        }
    },
    {
        "extend": false,
        "name": "SourceLocation",
        "interface": {
            "inherit": [],
            "body": [
                [
                    "source",
                    {
                        "union": [
                            "string",
                            "null"
                        ]
                    }
                ],
                [
                    "start",
                    "Position"
                ],
                [
                    "end",
                    "Position"
                ]
            ]
        }
    },
    {
        "extend": false,
        "name": "Position",
        "interface": {
            "inherit": [],
            "body": [
                [
                    "line",
                    "number"
                ],
                [
                    "column",
                    "number"
                ]
            ]
        }
    },
    {
        "extend": false,
        "name": "Identifier",
        "interface": {
            "inherit": [
                "Pattern",
                "Expression"
            ],
            "body": [
                [
                    "type",
                    "\"Identifier\""
                ],
                [
                    "name",
                    "string"
                ]
            ]
        }
    },
    {
        "extend": false,
        "name": "Literal",
        "interface": {
            "inherit": [
                "Expression"
            ],
            "body": [
                [
                    "type",
                    "\"Literal\""
                ],
                [
                    "value",
                    {
                        "union": [
                            "string",
                            "boolean",
                            "null",
                            "number",
                            "RegExp"
                        ]
                    }
                ]
            ]
        }
    },
    {
        "extend": false,
        "name": "RegExpLiteral",
        "interface": {
            "inherit": [
                "Literal"
            ],
            "body": [
                [
                    "regex",
                    {
                        "object": [
                            [
                                "pattern",
                                "string"
                            ],
                            [
                                "flags",
                                "string"
                            ]
                        ]
                    }
                ]
            ]
        }
    },
    {
        "extend": false,
        "name": "Program",
        "interface": {
            "inherit": [
                "Node"
            ],
            "body": [
                [
                    "type",
                    "\"Program\""
                ],
                [
                    "body",
                    {
                        "array": {
                            "Union": [
                                "Directive",
                                "Statement"
                            ]
                        }
                    }
                ]
            ]
        }
    },
    {
        "extend": false,
        "name": "Function",
        "interface": {
            "inherit": [
                "Node"
            ],
            "body": [
                [
                    "id",
                    {
                        "union": [
                            "Identifier",
                            "null"
                        ]
                    }
                ],
                [
                    "params",
                    {
                        "array": {
                            "NamedType": "Pattern"
                        }
                    }
                ],
                [
                    "body",
                    "FunctionBody"
                ]
            ]
        }
    },
    {
        "extend": false,
        "name": "Statement",
        "interface": {
            "inherit": [
                "Node"
            ],
            "body": []
        }
    },
    {
        "extend": false,
        "name": "ExpressionStatement",
        "interface": {
            "inherit": [
                "Statement"
            ],
            "body": [
                [
                    "type",
                    "\"ExpressionStatement\""
                ],
                [
                    "expression",
                    "Expression"
                ]
            ]
        }
    },
    {
        "extend": false,
        "name": "Directive",
        "interface": {
            "inherit": [
                "Node"
            ],
            "body": [
                [
                    "type",
                    "\"ExpressionStatement\""
                ],
                [
                    "expression",
                    "Literal"
                ],
                [
                    "directive",
                    "string"
                ]
            ]
        }
    },
    {
        "extend": false,
        "name": "BlockStatement",
        "interface": {
            "inherit": [
                "Statement"
            ],
            "body": [
                [
                    "type",
                    "\"BlockStatement\""
                ],
                [
                    "body",
                    {
                        "array": {
                            "NamedType": "Statement"
                        }
                    }
                ]
            ]
        }
    },
    {
        "extend": false,
        "name": "FunctionBody",
        "interface": {
            "inherit": [
                "BlockStatement"
            ],
            "body": [
                [
                    "body",
                    {
                        "array": {
                            "Union": [
                                "Directive",
                                "Statement"
                            ]
                        }
                    }
                ]
            ]
        }
    },
    {
        "extend": false,
        "name": "EmptyStatement",
        "interface": {
            "inherit": [
                "Statement"
            ],
            "body": [
                [
                    "type",
                    "\"EmptyStatement\""
                ]
            ]
        }
    },
    {
        "extend": false,
        "name": "DebuggerStatement",
        "interface": {
            "inherit": [
                "Statement"
            ],
            "body": [
                [
                    "type",
                    "\"DebuggerStatement\""
                ]
            ]
        }
    },
    {
        "extend": false,
        "name": "WithStatement",
        "interface": {
            "inherit": [
                "Statement"
            ],
            "body": [
                [
                    "type",
                    "\"WithStatement\""
                ],
                [
                    "object",
                    "Expression"
                ],
                [
                    "body",
                    "Statement"
                ]
            ]
        }
    },
    {
        "extend": false,
        "name": "ReturnStatement",
        "interface": {
            "inherit": [
                "Statement"
            ],
            "body": [
                [
                    "type",
                    "\"ReturnStatement\""
                ],
                [
                    "argument",
                    {
                        "union": [
                            "Expression",
                            "null"
                        ]
                    }
                ]
            ]
        }
    },
    {
        "extend": false,
        "name": "LabeledStatement",
        "interface": {
            "inherit": [
                "Statement"
            ],
            "body": [
                [
                    "type",
                    "\"LabeledStatement\""
                ],
                [
                    "label",
                    "Identifier"
                ],
                [
                    "body",
                    "Statement"
                ]
            ]
        }
    },
    {
        "extend": false,
        "name": "BreakStatement",
        "interface": {
            "inherit": [
                "Statement"
            ],
            "body": [
                [
                    "type",
                    "\"BreakStatement\""
                ],
                [
                    "label",
                    {
                        "union": [
                            "Identifier",
                            "null"
                        ]
                    }
                ]
            ]
        }
    },
    {
        "extend": false,
        "name": "ContinueStatement",
        "interface": {
            "inherit": [
                "Statement"
            ],
            "body": [
                [
                    "type",
                    "\"ContinueStatement\""
                ],
                [
                    "label",
                    {
                        "union": [
                            "Identifier",
                            "null"
                        ]
                    }
                ]
            ]
        }
    },
    {
        "extend": false,
        "name": "IfStatement",
        "interface": {
            "inherit": [
                "Statement"
            ],
            "body": [
                [
                    "type",
                    "\"IfStatement\""
                ],
                [
                    "test",
                    "Expression"
                ],
                [
                    "consequent",
                    "Statement"
                ],
                [
                    "alternate",
                    {
                        "union": [
                            "Statement",
                            "null"
                        ]
                    }
                ]
            ]
        }
    },
    {
        "extend": false,
        "name": "SwitchStatement",
        "interface": {
            "inherit": [
                "Statement"
            ],
            "body": [
                [
                    "type",
                    "\"SwitchStatement\""
                ],
                [
                    "discriminant",
                    "Expression"
                ],
                [
                    "cases",
                    {
                        "array": {
                            "NamedType": "SwitchCase"
                        }
                    }
                ]
            ]
        }
    },
    {
        "extend": false,
        "name": "SwitchCase",
        "interface": {
            "inherit": [
                "Node"
            ],
            "body": [
                [
                    "type",
                    "\"SwitchCase\""
                ],
                [
                    "test",
                    {
                        "union": [
                            "Expression",
                            "null"
                        ]
                    }
                ],
                [
                    "consequent",
                    {
                        "array": {
                            "NamedType": "Statement"
                        }
                    }
                ]
            ]
        }
    },
    {
        "extend": false,
        "name": "ThrowStatement",
        "interface": {
            "inherit": [
                "Statement"
            ],
            "body": [
                [
                    "type",
                    "\"ThrowStatement\""
                ],
                [
                    "argument",
                    "Expression"
                ]
            ]
        }
    },
    {
        "extend": false,
        "name": "TryStatement",
        "interface": {
            "inherit": [
                "Statement"
            ],
            "body": [
                [
                    "type",
                    "\"TryStatement\""
                ],
                [
                    "block",
                    "BlockStatement"
                ],
                [
                    "handler",
                    {
                        "union": [
                            "CatchClause",
                            "null"
                        ]
                    }
                ],
                [
                    "finalizer",
                    {
                        "union": [
                            "BlockStatement",
                            "null"
                        ]
                    }
                ]
            ]
        }
    },
    {
        "extend": false,
        "name": "CatchClause",
        "interface": {
            "inherit": [
                "Node"
            ],
            "body": [
                [
                    "type",
                    "\"CatchClause\""
                ],
                [
                    "param",
                    "Pattern"
                ],
                [
                    "body",
                    "BlockStatement"
                ]
            ]
        }
    },
    {
        "extend": false,
        "name": "WhileStatement",
        "interface": {
            "inherit": [
                "Statement"
            ],
            "body": [
                [
                    "type",
                    "\"WhileStatement\""
                ],
                [
                    "test",
                    "Expression"
                ],
                [
                    "body",
                    "Statement"
                ]
            ]
        }
    },
    {
        "extend": false,
        "name": "DoWhileStatement",
        "interface": {
            "inherit": [
                "Statement"
            ],
            "body": [
                [
                    "type",
                    "\"DoWhileStatement\""
                ],
                [
                    "body",
                    "Statement"
                ],
                [
                    "test",
                    "Expression"
                ]
            ]
        }
    },
    {
        "extend": false,
        "name": "ForStatement",
        "interface": {
            "inherit": [
                "Statement"
            ],
            "body": [
                [
                    "type",
                    "\"ForStatement\""
                ],
                [
                    "init",
                    {
                        "union": [
                            "VariableDeclaration",
                            "Expression",
                            "null"
                        ]
                    }
                ],
                [
                    "test",
                    {
                        "union": [
                            "Expression",
                            "null"
                        ]
                    }
                ],
                [
                    "update",
                    {
                        "union": [
                            "Expression",
                            "null"
                        ]
                    }
                ],
                [
                    "body",
                    "Statement"
                ]
            ]
        }
    },
    {
        "extend": false,
        "name": "ForInStatement",
        "interface": {
            "inherit": [
                "Statement"
            ],
            "body": [
                [
                    "type",
                    "\"ForInStatement\""
                ],
                [
                    "left",
                    {
                        "union": [
                            "VariableDeclaration",
                            "Pattern"
                        ]
                    }
                ],
                [
                    "right",
                    "Expression"
                ],
                [
                    "body",
                    "Statement"
                ]
            ]
        }
    },
    {
        "extend": false,
        "name": "Declaration",
        "interface": {
            "inherit": [
                "Statement"
            ],
            "body": []
        }
    },
    {
        "extend": false,
        "name": "FunctionDeclaration",
        "interface": {
            "inherit": [
                "Declaration",
                "Function"
            ],
            "body": [
                [
                    "type",
                    "\"FunctionDeclaration\""
                ],
                [
                    "id",
                    "Identifier"
                ]
            ]
        }
    },
    {
        "extend": false,
        "name": "VariableDeclaration",
        "interface": {
            "inherit": [
                "Declaration"
            ],
            "body": [
                [
                    "type",
                    "\"VariableDeclaration\""
                ],
                [
                    "declarations",
                    {
                        "array": {
                            "NamedType": "VariableDeclarator"
                        }
                    }
                ],
                [
                    "kind",
                    "\"var\""
                ]
            ]
        }
    },
    {
        "extend": false,
        "name": "VariableDeclarator",
        "interface": {
            "inherit": [
                "Node"
            ],
            "body": [
                [
                    "type",
                    "\"VariableDeclarator\""
                ],
                [
                    "id",
                    "Pattern"
                ],
                [
                    "init",
                    {
                        "union": [
                            "Expression",
                            "null"
                        ]
                    }
                ]
            ]
        }
    },
    {
        "extend": false,
        "name": "Expression",
        "interface": {
            "inherit": [
                "Node"
            ],
            "body": []
        }
    },
    {
        "extend": false,
        "name": "ThisExpression",
        "interface": {
            "inherit": [
                "Expression"
            ],
            "body": [
                [
                    "type",
                    "\"ThisExpression\""
                ]
            ]
        }
    },
    {
        "extend": false,
        "name": "ArrayExpression",
        "interface": {
            "inherit": [
                "Expression"
            ],
            "body": [
                [
                    "type",
                    "\"ArrayExpression\""
                ],
                [
                    "elements",
                    {
                        "array": {
                            "Union": [
                                "Expression",
                                "null"
                            ]
                        }
                    }
                ]
            ]
        }
    },
    {
        "extend": false,
        "name": "ObjectExpression",
        "interface": {
            "inherit": [
                "Expression"
            ],
            "body": [
                [
                    "type",
                    "\"ObjectExpression\""
                ],
                [
                    "properties",
                    {
                        "array": {
                            "NamedType": "Property"
                        }
                    }
                ]
            ]
        }
    },
    {
        "extend": false,
        "name": "Property",
        "interface": {
            "inherit": [
                "Node"
            ],
            "body": [
                [
                    "type",
                    "\"Property\""
                ],
                [
                    "key",
                    {
                        "union": [
                            "Literal",
                            "Identifier"
                        ]
                    }
                ],
                [
                    "value",
                    "Expression"
                ],
                [
                    "kind",
                    {
                        "union": [
                            "\"init\"",
                            "\"get\"",
                            "\"set\""
                        ]
                    }
                ]
            ]
        }
    },
    {
        "extend": false,
        "name": "FunctionExpression",
        "interface": {
            "inherit": [
                "Expression",
                "Function"
            ],
            "body": [
                [
                    "type",
                    "\"FunctionExpression\""
                ]
            ]
        }
    },
    {
        "extend": false,
        "name": "UnaryExpression",
        "interface": {
            "inherit": [
                "Expression"
            ],
            "body": [
                [
                    "type",
                    "\"UnaryExpression\""
                ],
                [
                    "operator",
                    "UnaryOperator"
                ],
                [
                    "prefix",
                    "boolean"
                ],
                [
                    "argument",
                    "Expression"
                ]
            ]
        }
    },
    {
        "extend": false,
        "name": "UnaryOperator",
        "enum": [
            "-",
            "+",
            "!",
            "~",
            "typeof",
            "void",
            "delete"
        ]
    },
    {
        "extend": false,
        "name": "UpdateExpression",
        "interface": {
            "inherit": [
                "Expression"
            ],
            "body": [
                [
                    "type",
                    "\"UpdateExpression\""
                ],
                [
                    "operator",
                    "UpdateOperator"
                ],
                [
                    "argument",
                    "Expression"
                ],
                [
                    "prefix",
                    "boolean"
                ]
            ]
        }
    },
    {
        "extend": false,
        "name": "UpdateOperator",
        "enum": [
            "++",
            "--"
        ]
    },
    {
        "extend": false,
        "name": "BinaryExpression",
        "interface": {
            "inherit": [
                "Expression"
            ],
            "body": [
                [
                    "type",
                    "\"BinaryExpression\""
                ],
                [
                    "operator",
                    "BinaryOperator"
                ],
                [
                    "left",
                    "Expression"
                ],
                [
                    "right",
                    "Expression"
                ]
            ]
        }
    },
    {
        "extend": false,
        "name": "BinaryOperator",
        "enum": [
            "==",
            "!=",
            "===",
            "!==",
            "<",
            "<=",
            ">",
            ">=",
            "<<",
            ">>",
            ">>>",
            "+",
            "-",
            "*",
            "/",
            "%",
            "|",
            "^",
            "&",
            "in",
            "instanceof"
        ]
    },
    {
        "extend": false,
        "name": "AssignmentExpression",
        "interface": {
            "inherit": [
                "Expression"
            ],
            "body": [
                [
                    "type",
                    "\"AssignmentExpression\""
                ],
                [
                    "operator",
                    "AssignmentOperator"
                ],
                [
                    "left",
                    {
                        "union": [
                            "Pattern",
                            "Expression"
                        ]
                    }
                ],
                [
                    "right",
                    "Expression"
                ]
            ]
        }
    },
    {
        "extend": false,
        "name": "AssignmentOperator",
        "enum": [
            "=",
            "+=",
            "-=",
            "*=",
            "/=",
            "%=",
            "<<=",
            ">>=",
            ">>>=",
            "|=",
            "^=",
            "&="
        ]
    },
    {
        "extend": false,
        "name": "LogicalExpression",
        "interface": {
            "inherit": [
                "Expression"
            ],
            "body": [
                [
                    "type",
                    "\"LogicalExpression\""
                ],
                [
                    "operator",
                    "LogicalOperator"
                ],
                [
                    "left",
                    "Expression"
                ],
                [
                    "right",
                    "Expression"
                ]
            ]
        }
    },
    {
        "extend": false,
        "name": "LogicalOperator",
        "enum": [
            "||",
            "&&"
        ]
    },
    {
        "extend": false,
        "name": "MemberExpression",
        "interface": {
            "inherit": [
                "Pattern",
                "Expression"
            ],
            "body": [
                [
                    "type",
                    "\"MemberExpression\""
                ],
                [
                    "object",
                    "Expression"
                ],
                [
                    "property",
                    "Expression"
                ],
                [
                    "computed",
                    "boolean"
                ]
            ]
        }
    },
    {
        "extend": false,
        "name": "ConditionalExpression",
        "interface": {
            "inherit": [
                "Expression"
            ],
            "body": [
                [
                    "type",
                    "\"ConditionalExpression\""
                ],
                [
                    "test",
                    "Expression"
                ],
                [
                    "alternate",
                    "Expression"
                ],
                [
                    "consequent",
                    "Expression"
                ]
            ]
        }
    },
    {
        "extend": false,
        "name": "CallExpression",
        "interface": {
            "inherit": [
                "Expression"
            ],
            "body": [
                [
                    "type",
                    "\"CallExpression\""
                ],
                [
                    "callee",
                    "Expression"
                ],
                [
                    "arguments",
                    {
                        "array": {
                            "NamedType": "Expression"
                        }
                    }
                ]
            ]
        }
    },
    {
        "extend": false,
        "name": "NewExpression",
        "interface": {
            "inherit": [
                "Expression"
            ],
            "body": [
                [
                    "type",
                    "\"NewExpression\""
                ],
                [
                    "callee",
                    "Expression"
                ],
                [
                    "arguments",
                    {
                        "array": {
                            "NamedType": "Expression"
                        }
                    }
                ]
            ]
        }
    },
    {
        "extend": false,
        "name": "SequenceExpression",
        "interface": {
            "inherit": [
                "Expression"
            ],
            "body": [
                [
                    "type",
                    "\"SequenceExpression\""
                ],
                [
                    "expressions",
                    {
                        "array": {
                            "NamedType": "Expression"
                        }
                    }
                ]
            ]
        }
    },
    {
        "extend": false,
        "name": "Pattern",
        "interface": {
            "inherit": [
                "Node"
            ],
            "body": []
        }
    }
]